1.冗余备份

2.tweeter难道不会构建实时索引么？那最新的热点只有一天以后才可以搜索？
1周之内，实时构建 
批量，非实时的7天意外的数据



3.老师，有了实时建立索引  还需要用到批量索引建立吗，还是在最数据恢复时才用到批量索引建立
实时和非实时都会查出
动态加载

4.请问是在哪个阶段加权“关注的人”？不能是在建索引的过程中吧，因为每个人关注的都不同， 是在最后blender还是还是search service里面做的呢？
 关注的人：列表，放在内存中的
 最后blender，结果合并排序的时候

 5.2% 16%这个数据是多久更新一次？应该是batch更新吧？

 批量时做的事情

 6.然后想问一下对几百个chars这种的ES field比如说email content做type ahead或者suggestion或者ngram这种，请问怎么实现比较好，可以之后讲到ES再回答

Elasticsearch 

多关键词搜索


7.第13页讲得索引流水线（用mysql那个）是被后边的实时索引pipeline和批量索引pipeline取代了吗？
推特早期只是用MySQL，没有索引的概念

8.请问能讲讲 国内外 系统设计面试的不同侧重吗？
是不是国外更注重架构 国内更注重细节？

系统设计为例：
北美的大厂，思维逻辑性，想的全不全，有没有结构，
思路是否开阔，看你这个人聪不聪明，知识的储备量

面的广度，思维

国内：从面到点，系统设计的点——》 基础知识，项目经验
从面到点
怎么设计存储，redis,
redis 什么数据结构，他的原理是什么，有哪些注意点

9.数据量小点
电商数据量也是非常大的

10.如果想要深入学习的
推荐重点 ES
用的最多最广的



11.Redsi  Zset
跳跃表，这个在国内面试，非常非常高频

12.根据搜索结果的广告投放是怎么实现呢，广告也建单独的索引么？

广告系统-广告引擎
appple , 关于苹果的广告投放

只是和关键词关联

13.ES如果不够存了，加master/data nodes啥的需要reindex或者reshard之类的吗

ES如果不够存，”支持高可用, 可水平扩展“，可以加很多机器

14.系统面试的时候我们需要展示系统演进过程吗 还是直接给最终的work solution 然后讲怎么scale？

先给出一个正确的答案，
其他方案为什么没有用，而采用了目前的这个方案
最好有对比，这样就能体现你思考的比较深


15.副本进制中，主本和副本是放在一个node吗？还是分在不同的node里？
放在不同的

16.热度值 所以每个小时都会重新生成一个zset是吗？

分数值，每小时更新一次

取出排序在前面的推文



17.批量这个是按score partition吗还是会按比如说userid这种
推文的ID ，路由的切分


18.热度值里用redis 的zset主要功能是排序吗？还是用到了
别的功能 ( 字节的 高频题)

值，分数
zrank


19.请问热搜榜里面点赞数，转发数，收藏数是直接存在tweet表里面吗？还是在Redis中单独统计？

推特表里存储了，我们统计的时候，是从Redis,
实时索引里取出来的

20.2% 16%这个数据是多久更新一次？应该是batch更新吧？
批量更新的


21.热搜跟inverted index 里的token match怎么样blending起来？
热搜不需要再有索引的过程，在热搜榜上直接知道是哪个推文，直接访问就行了


22.聚合服务器相当于mapreduce的reducer吗？
对结果进行聚合


23.希望老师可以讲一下为了支持新的feature需要对之前的historical data来做reindex需要注意的事情和best practice
新的搜索条件
重新构建索引
在批量构建索引的时候，加上针对新的feature的索引

24.實時索引redis裡value存的是twitter id還是整條twitter內容(包含點讚數,轉發等等)?


最好是存储twitter id，
有专门的结构存Redis中推文内容



25.老师提到文字和图片不存在一起，那搜索返回的时候是怎么取的？

 有图片和视频的话有URL

 页面渲染的时候呢，根据URL去文件系统中去取


26.我昨天了解了一下earlybird 似乎是用的tweet做partition 这意味着同一个key比如Apple其实是会存在不同的early bird里 所以30页这个图 意思是2%最热的tweet会单独建一个索引库 同理16% tweet和实时一周内的tweet  是这么理解的吗？

是的
最后会把所有的值进行一个聚合


27.数据库和服务器要分散在不同的地方吗？这样可以优化速度吗？
分单元存储

杭州（千岛湖），深圳，张北（内蒙古）电便宜

跨机房，在同一个机房里面 网络传输比较快的


